apply plugin: 'com.android.application'

android {
	compileSdk rootProject.ext.CompileSdk

	namespace 'website.leifs.delta'

	defaultConfig {
		applicationId "website.leifs.delta"
		minSdkVersion rootProject.ext.MinSdk
		targetSdkVersion rootProject.ext.TargetSdk
		versionCode 202001
		versionName "2.2.0-beta.1"
		multiDexEnabled true

		// Naming app bundles
		tasks.withType(Jar).configureEach {
			archiveBaseName.set("delta-v${versionCode}")
		}
	}

	bundle {
		language {
			enableSplit false
		}
	}

	buildTypes {
		release {
			debuggable false
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	flavorDimensions "variant"
	productFlavors {
		play {
			dimension "variant"
			resValue "string", "app_name", "Delta"
			matchingFallbacks = ["play"]
		}
		foss {
			dimension "variant"
			applicationIdSuffix '.foss'
			resValue "string", "app_name", "Delta"
			matchingFallbacks = ["foss"]
		}
	}

	sourceSets {
		play { java.srcDirs = ['src/play/java/'] }
		foss { java.srcDirs = ['src/foss/java/'] }

	}

}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

dependencies {
	/*
     * CandyBar Material Dashboard Library
     *
     * TODO: How to update the dashboard?!
     * Check this update guide for every version
     *      - https://github.com/zixpo/candybar-sample/wiki/Updating-the-dashboard
     * If you've missed some versions you've to also follow update guide for those versions
     */

	playImplementation 'com.github.zixpo:candybar:3.21.1'
	fossImplementation 'com.github.donnnno:candybar-foss:3.21.2'
}

// Code for automatically copying appfilter.xml and drawable.xml
// from `res/xml` directory to `assets` directory

// flameshikari: we don't need that I guess. the workflow does that
// https://github.com/zixpo/candybar-sample/wiki/Updating-the-dashboard#from-v3201-to-v3202

// tasks.register('copyXMLs') {
//     ['appfilter.xml', 'drawable.xml'].each { file ->
//         copy {
//             from "$projectDir/src/main/res/xml/$file"
//             into "$projectDir/src/main/assets/"
//         }
//     }
// }
// tasks.configureEach { task ->
//     if (task.name == 'assembleDebug' || task.name == 'assembleRelease') {
//         task.dependsOn copyXMLs
//     }
// }
